import { useSelector } from "react-redux";
import {
  reduecFromCart,
  selectUserInfo,
} from "../../src/store/slices/clientSlice";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import imageLoader from "../../src/imageLoader";
import { imageAddress } from "..";
import { GoTrashcan } from "react-icons/go";
import { IoMdRemoveCircle } from "react-icons/io";
import { AddToCartType } from "../../src/types/types";
import { useAppDispatch } from "../../src/store/hooks";
import Shipping from "../../components/shipping/shipping";
export default function CartPage() {
  const userInfo = useSelector(selectUserInfo);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-wrap h-fit font-Vazir-Bold justify-center items-start w-full ">
        <h1 className="flex text-center h-fit justify-center w-full font-Vazir-Medium text-2xl text-blackout-red">
          مشخصات
        </h1>
        {userInfo?.firstname !== undefined ? (
          <>
            <div className="flex flex-wrap border mt-4 rounded-md text-gray-600 text-xs">
              <ul className="flex items-center h-fit w-full">
                <li className="flex w-[110px]  mx-2 p-2">نام :</li>
                <li className="flex  mx-2 p-2">{userInfo?.firstname}</li>
              </ul>
              <ul className="flex items-center h-fit  w-full">
                <li className="flex  w-[110px] mx-2 p-2">نام خانوادگی:</li>

                <li className="flex  mx-2 p-2">{userInfo?.lastname}</li>
              </ul>
            </div>
            <div className="flex flex-wrap border mt-4 rounded-md text-gray-600 text-xs">
              <Shipping />
            </div>
            <h1 className="mt-20 flex text-center h-fit justify-center w-full font-Vazir-Medium text-2xl text-blackout-red">
              سبد خرید
            </h1>
            <div className="flex w-full justify-center">
              <CartContainer></CartContainer>
            </div>
          </>
        ) : (
          <>
            <div className="flex justify-center text-3xl font-Vazir-Bold text-gray-600">
              سبد شما خالی میباشد
            </div>
          </>
        )}
      </div>
    </>
  );
}

function CartContainer() {
  const userInfo = useSelector(selectUserInfo);
  const dispatch = useAppDispatch();

  function handleReduceFromCart(productId: string, variantId: string) {
    if (
      userInfo._id !== undefined &&
      productId !== undefined &&
      userInfo.accessToken !== undefined
    ) {
      const reduce: AddToCartType = {
        accessToken: userInfo.accessToken,
        userId: userInfo._id,
        productId: productId,
        variantId: variantId,
      };
      dispatch(reduecFromCart(reduce));
    } else {
      console.log("please sign in first");
    }
  }

  return (
    <div className="flex flex-wrap w-full justify-center rounded-lg   max-w-[500px]">
      {userInfo?.cart !== undefined ? (
        userInfo?.cart.map((cartItem, index) => (
          <>
            <div
              className="flex flex-wrap w-full justify-center items-center border-b border-b-slate-300 p-2 mt-0 mx-1 m-2 font-Vazir-Medium select-none h-auto"
              //   href={encodeURI(`/${cartItem?.ProductUrl}`)}
            >
              <div className="flex items-start justify-center  w-full max-w-[500px]">
                <div className="hidden flex-wrap items-start justify-start w-1/5">
                  <div className="font-Vazir-Bold text-xs m-2">رنگ</div>
                  {cartItem.variant !== undefined ? (
                    <>
                      <input
                        key={index}
                        type={"color"}
                        disabled
                        className="m-2 h-[20px] w-[15px] bg-transparent "
                        value={cartItem.variant.color.hex_code}
                      ></input>
                    </>
                  ) : (
                    <></>
                  )}
                </div>
                <div className="flex my-2 p-2 rounded-xl shadow border h-[120px] w-full text-xs font-Vazir-Medium overflow-hidden">
                  <Image
                    className="flex w-[100px] h-auto m-1 rounded-xl"
                    loader={imageLoader}
                    unoptimized
                    quality="80"
                    loading="eager"
                    unselectable="on"
                    draggable="false"
                    placeholder="empty"
                    src={imageAddress(
                      cartItem?.ImageUrl,
                      100,
                      100,
                      100,
                      "webp",
                      undefined
                    )}
                    alt={cartItem?.title_fa ?? "not-present"}
                    width={100}
                    height={100}
                  />
                  <div className="flex h-fit w-2/4 text-xs font-Vazir-Bold  items-center text-justify">
                    {cartItem.title_fa ?? cartItem.sku}
                  </div>
                  <div className="flex flex-wrap h-fit w-1/4 ">
                    <span className="text-red-500 line-through">
                      {(
                        cartItem?.variant.price.rrp_price / 10
                      ).toLocaleString()}
                    </span>
                    {(
                      cartItem?.variant.price.selling_price / 10
                    ).toLocaleString()}{" "}
                    تومان
                  </div>
                  <div className="flex flex-wrap h-fit w-1/4 ">
                    <div className="flex w-full">
                      {cartItem?.quantity !== undefined &&
                      cartItem?.quantity > 1 ? (
                        <button
                          onClick={() => {
                            handleReduceFromCart(
                              cartItem.productId,
                              cartItem.variantId
                            );
                          }}
                          className="text-sm"
                        >
                          <IoMdRemoveCircle
                            color={"rgb(235,18,18)"}
                            size={20}
                          />
                        </button>
                      ) : (
                        <button
                          onClick={() => {
                            handleReduceFromCart(
                              cartItem.productId,
                              cartItem.variantId
                            );
                          }}
                          className="text-sm "
                        >
                          <GoTrashcan color={"rgb(235,18,18)"} size={20} />
                        </button>
                      )}
                      {cartItem?.quantity} عدد
                    </div>
                    <Link
                      href={encodeURI(
                        `/products/${cartItem?.productId}/${(
                          cartItem?.title_fa ?? cartItem?.sku
                        )
                          ?.replaceAll(" ", "-")
                          .replaceAll("/", "-")}?v=${cartItem?.variantId}`
                      )}
                      className="flex h-fit m-1 px-2 py-1 border rounded-xl bg-brand-purple text-white"
                    >
                      نمایش کالا
                    </Link>
                  </div>
                </div>
                {/* <div className="flex  flex-wrap w-2/3">
                  <div
                    key={cartItem?.variantId + "-num3"}
                    className="text-xs font-Vazir-Bold  items-center text-justify"
                  >
                    {cartItem?.title_fa?.toLocaleUpperCase()}
                  </div>
                </div> */}
              </div>
            </div>
          </>
        ))
      ) : (
        <></>
      )}
    </div>
  );
}
