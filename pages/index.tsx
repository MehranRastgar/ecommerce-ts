import type { GetStaticProps } from 'next'
import Head from 'next/head'
import axios from 'axios'
import type { AxiosResponse } from 'axios'
import Image from 'next/future/image'

// import styles from '../styles/Home.module.css'
import { GetProductsArray, MinifyProduct } from '../types/types'
import imageLoader from '../src/imageLoader'
import Link from 'next/link'
import Layout from '../components/Layout'

export function imageAddress(
  src: string | undefined | null
  , w: number, h: number, 
  quality: 50 | 80 | 90 | 100,
  format: "webp"|"jpeg"|"jpg"|"png"|"svg"
  ): string {
  if (src)
    return `https://api.bugtech.ir/api/image?x=${w}&y=${h}&q=${quality}&t=${format}&path=${src}`
  else
    return `/shopsoo.png`
}

function Home({minifyProducts}: { minifyProducts: MinifyProduct[] | undefined }) {

  return (
    <>
      <div className="flex flex-wrap w-full bg-white">
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {minifyProducts?.map((minifyProduct: MinifyProduct) =>
          <>
            <Link href={`products/${minifyProduct._id}/${(minifyProduct.title_fa ?? minifyProduct.sku).replaceAll(" ", '-')}`}>
              <a key={minifyProduct._id + "-a"} className='w-full'>
                <li
                  key={minifyProduct._id}
                >
                  <Image
                    loader={imageLoader}
                    // quality='80'
                    unoptimized
                    loading="eager"
                    placeholder="empty"
                    src={imageAddress(minifyProduct.image, 150, 150, 80, 'webp')}
                    alt={minifyProduct.title_en}
                    width={ 150}
                    height={ 150} 
                  />
                </li>
                <li key={minifyProduct._id + "-num2"}>
                  {minifyProduct.title_fa}
                </li>
                <li key={minifyProduct._id + "-num3"}>
                  {minifyProduct.title_en}
                </li>
              </a>
            </Link>
          </>
        )
        }
        {/* base url: {process.env.NEXT_PUBLIC_BASE_URL}s */}
        <hr />
      </div>
    </>
  )
}


type Search = {
  perPage: string,
  page: string,
  category: object,
  sort: string
}

export const getStaticProps: GetStaticProps = async () => {
  const getBody: Search =
  {
    "perPage": "20",
    "page": "1",
    "category": { "category.L1": "laptop", "category.L2": "Gaming" },
    "sort": "price"
  }

  try {
    const response: AxiosResponse = await axios.post(
      `http://localhost:5000/api/pro/psearch`, getBody
    );

    const dataProduct: GetProductsArray = {
      info: null,
      results: response.data
    }

    type MinifyProducts = MinifyProduct[]

    const minifyProducts: MinifyProducts = []

    dataProduct.results?.map((product) => {
      const minifyProduct: MinifyProduct = {
        Price: product.variants[product.primary_variant].price,
        _id: product._id,
        image: product.main.images[0],
        imid: product.imid,
        title_en: product.main.title_en,
        title_fa: product.main.title_fa,
        sku: product.main.sku
      }
      minifyProducts.push(minifyProduct)
    }
    )
    //  console.log(minifyProducts)
    return {
      props: {
        // products: dataProduct.results,
        minifyProducts: minifyProducts
      }

    }

  } catch (err) {
    return {
      props: {
        minifyProducts: undefined

      }

    }
  }
}

Home.getLayout = function getLayout(page: typeof Home) {
  return <Layout>{page}</Layout>;
};


export default Home




// Home.getLayout  = function getLayout  (page: typeof Home){
//   return <Layout>{page}</Layout>
// }
